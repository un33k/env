###########################

# start | stop postgres
pg_start | pg_stop

# create a postgres user if it doesn't exit
createuser -s postgres

# create a database and assign it to an existing user
sudo -u postgres
$ createdb -O user_name_goes_here database_name_goes_here

# Backup a database
$ pg_dump -U username_goes_here database_name_goes_here -f database_file_to_dump_to_goes_here.sql

# Restore:
$ psql -U username_goes_here -d database_name_goes_here -f database_dumped_file_goes_here.sql

# Dump all databases
$ pg_dumpall -U privileged_user_name > all_dump_file.sql

# Backup postgres table
$ pg_dump --table database_name_goes_here -U username_goes_here table_name_goes_here -f table_dump_name_goes_here.sql


###########################
# connect to postgres
$ psql -U postgres

# create database
postgres=# create database database_name encoding = 'UTF8';

# create database (base on template)
postgres=# create database database_name with template = template0 encoding = 'UTF8';

# create GIS database
postgres=# create database database_name encoding = 'UTF8';
postgres=# \c database_name;
postgres=# create extension postgis;

# create database from within (GIS based on template)
postgres=# create database database_name with template = template_postgis encoding = 'UTF8';

# create a user with no privileges
postgres=# create role user_name with nosuperuser nocreatedb nocreaterole login encrypted password 'user_password';

# change password for user
postgres=# alter user user_name with password '<newpassword>';

# grant full privileges to database to a user
postgres=# grant all privileges on database database_name to user_name;

# show all user
postgres=# \du

# show all database
postgres=# \l

# quite and exit psql
postgres=# \q
